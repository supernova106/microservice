variable "datacenter" {default = "aws-us-east-1"}
variable "dns_zone_id" {default="xxxxxxx"}
variable "dns_domain" {default="lol.com"}
variable "dns_subdomain" { default = ".dev" }

variable "amis" {
  default = {
    us-east-1 = "ami-f4cc1de2"
  }
}

variable "availability_zones"  {
  default = "a,b,c"
}

variable "long_name" {default = "rz-infra"}
variable "region" {default = "us-east-1"}
variable "short_name" {default = "rz"}
variable "ssh_key" {default = "~/.ssh/elk.pub"}
variable "ssh_username"  {default = "ubuntu"}

variable "worker_count" {default = "1"}
variable "control_count" {default = "3"}
variable "edge_count" {default = "1"}

variable "worker_type" {default = "m4.large"}
variable "control_type" {default = "m4.large"}
variable "edge_type" {default = "t2.medium"}

variable "worker_ami_id" {default = "ami-f4cc1de2"}

provider "aws" {
  region = "${var.region}"
}

module "vpc" {
  source ="./terraform/aws/vpc"
  availability_zones = "${var.availability_zones}"
  short_name = "${var.short_name}"
  long_name = "${var.long_name}"
  region = "${var.region}"
}

module "ssh-key" {
  source ="./terraform/aws/ssh"
  ssh_key = "${var.ssh_key}"
  short_name = "${var.short_name}"
}

module "security-groups" {
  source = "./terraform/aws/security_groups"
  short_name = "${var.short_name}"
  vpc_id = "${module.vpc.vpc_id}"
}

module "iam-profiles" {
  source = "./terraform/aws/iam"
  short_name = "${var.short_name}"
}

module "worker-nodes" {
  source = "./terraform/aws/instance"
  count = "${var.worker_count}"
  count_format = "%03d"
  datacenter = "${var.datacenter}"
  data_ebs_volume_size = "100"
  role = "worker"
  ec2_type = "${var.worker_type}"
  iam_profile = "${module.iam-profiles.worker_iam_instance_profile}"
  ssh_username = "${var.ssh_username}"
  source_ami = "${lookup(var.amis, var.region)}"
  short_name = "${var.short_name}"
  ssh_key_pair = "${module.ssh-key.ssh_key_name}"
  availability_zones = "${module.vpc.availability_zones}"
  security_group_ids = "${module.vpc.default_security_group},${module.security-groups.inner_security_group},${module.security-groups.worker_security_group}"
  vpc_subnet_ids = "${module.vpc.subnet_ids}"
  # uncomment below it you want to use remote state for vpc variables
  #availability_zones = "${terraform_remote_state.vpc.output.availability_zones}"
  #security_group_ids = "${terraform_remote_state.vpc.output.default_security_group},${module.security-groups.inner_security_group},${module.security-groups.worker_security_group}"
  #vpc_subnet_ids = "${terraform_remote_state.vpc.output.subnet_ids}"
}

module "control-nodes" {
  source = "./terraform/aws/instance"
  count = "${var.control_count}"
  datacenter = "${var.datacenter}"
  role = "control"
  ec2_type = "${var.control_type}"
  iam_profile = "${module.iam-profiles.control_iam_instance_profile}"
  ssh_username = "${var.ssh_username}"
  source_ami = "${lookup(var.amis, var.region)}"
  short_name = "${var.short_name}"
  ssh_key_pair = "${module.ssh-key.ssh_key_name}"
  availability_zones = "${module.vpc.availability_zones}"
  security_group_ids = "${module.vpc.default_security_group},${module.security-groups.inner_security_group},${module.security-groups.control_security_group}"
  vpc_subnet_ids = "${module.vpc.subnet_ids}"
  # uncomment below it you want to use remote state for vpc variables
  #availability_zones = "${terraform_remote_state.vpc.output.availability_zones}"
  #security_group_ids = "${terraform_remote_state.vpc.output.default_security_group},${module.security-groups.inner_security_group},${module.security-groups.control_security_group}"
  #vpc_subnet_ids = "${terraform_remote_state.vpc.output.subnet_ids}"
}

module "edge-nodes" {
  source = "./terraform/aws/instance"
  count = "${var.edge_count}"
  datacenter = "${var.datacenter}"
  role = "edge"
  ec2_type = "${var.edge_type}"
  ssh_username = "${var.ssh_username}"
  source_ami = "${lookup(var.amis, var.region)}"
  short_name = "${var.short_name}"
  ssh_key_pair = "${module.ssh-key.ssh_key_name}"
  availability_zones = "${module.vpc.availability_zones}"
  security_group_ids = "${module.vpc.default_security_group},${module.security-groups.inner_security_group},${module.security-groups.edge_security_group}"
  vpc_subnet_ids = "${module.vpc.subnet_ids}"
  # uncomment below it you want to use remote state for vpc variables
  #availability_zones = "${terraform_remote_state.vpc.output.availability_zones}"
  #security_group_ids = "${terraform_remote_state.vpc.output.default_security_group},${module.security-groups.edge_security_group}"
  #vpc_subnet_ids = "${terraform_remote_state.vpc.output.subnet_ids}"
}

#module "worker-target-groups" {
#  source = "./terraform/aws/target_groups"
#  vpc_id = "${module.vpc.vpc_id}"
#  instance_ids = "${module.worker-nodes.ec2_ids}"
#  short_name = "${var.short_name}"
#}

#module "alb" {
#  source = "./terraform/aws/alb"
#  vpc_subnet_ids = "${module.vpc.subnet_ids}"
#  security_group_ids = "${module.vpc.default_security_group},${module.security-groups.alb_security_group}"
#  short_name = "${var.short_name}"
#}

#module "alb_listeners" {
#  source = "./terraform/aws/alb_listeners"
#  alb_arn = "${module.alb.alb_arn}"
#  target_group_arn = "${module.worker-target-groups.target_group_arn}"
#}

module "route53" {
  source = "./terraform/aws/route53/dns"
  control_count = "${var.control_count}"
  control_ips = "${module.control-nodes.ec2_ips}"
  domain = "${var.dns_domain}"
  edge_count = "${var.edge_count}"
  edge_ips = "${module.edge-nodes.ec2_ips}"
  hosted_zone_id = "${var.dns_zone_id}"
  short_name = "${var.short_name}"
  subdomain = "${var.dns_subdomain}"
  worker_count = "${var.worker_count}"
  worker_ips = "${module.worker-nodes.ec2_ips}"
}

module "elb" {
  source = "./terraform/aws/elb"
  vpc_subnet_ids = "${module.vpc.subnet_ids}"
  security_group_ids = "${module.vpc.default_security_group},${module.security-groups.elb_security_group}"
  short_name = "${var.short_name}"
}

module "worker-launch-configuration" {
  source = "./terraform/aws/launch_configuration"
  short_name = "${var.short_name}"
  image_id = "${var.worker_ami_id}"
  ec2_type = "${var.worker_type}"
  iam_profile = "${module.iam-profiles.worker_iam_instance_profile}"
  security_group_ids = "${module.vpc.default_security_group},${module.security-groups.inner_security_group},${module.security-groups.worker_security_group}"
  ssh_key_pair = "${module.ssh-key.ssh_key_name}"
}

module "worker-autoscaling-group" {
  source = "./terraform/aws/autoscaling_group"
  subnet_ids = "${module.vpc.subnet_ids}"
  short_name = "${var.short_name}"
  availability_zones = "${module.vpc.availability_zones}"
  launch_configuration_name = "${module.worker-launch-configuration.name}"
  #target_group_arns = "${module.worker-target-groups.target_group_arn}"
  elb_names = "${module.elb.elb_name}"
}
